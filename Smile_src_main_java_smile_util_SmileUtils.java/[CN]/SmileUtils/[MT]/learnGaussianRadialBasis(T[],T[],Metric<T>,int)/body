{
  if (p < 1) {
    throw new IllegalArgumentException("Invlaid number of nearest neighbors: " + p);
  }
  int k=centers.length;
  CLARANS<T> clarans=new CLARANS<T>(x,distance,k,Math.min(100,(int)Math.round(0.01 * k * (x.length - k))));
  System.arraycopy(clarans.medoids(),0,centers,0,k);
  p=Math.min(p,k - 1);
  double[] r=new double[k];
  GaussianRadialBasis[] rbf=new GaussianRadialBasis[k];
  for (int i=0; i < k; i++) {
    for (int j=0; j < k; j++) {
      r[j]=distance.d(centers[i],centers[j]);
    }
    Arrays.sort(r);
    double r0=0.0;
    for (int j=1; j <= p; j++) {
      r0+=r[j];
    }
    r0/=p;
    rbf[i]=new GaussianRadialBasis(r0);
  }
  return rbf;
}
