{
  if (!digraph) {
    throw new UnsupportedOperationException("Topological sort is only meaningful for digraph.");
  }
  int[] in=new int[n];
  int[] ts=new int[n];
  for (int i=0; i < n; i++) {
    ts[i]=-1;
    for (int v=0; v < n; v++) {
      if (graph[i][v] != 0.0) {
        in[v]++;
      }
    }
  }
  Queue<Integer> queue=new LinkedList<Integer>();
  for (int i=0; i < n; i++) {
    if (in[i] == 0) {
      queue.offer(i);
    }
  }
  for (int i=0; !queue.isEmpty(); i++) {
    int t=queue.poll();
    ts[i]=t;
    for (int v=0; v < n; v++) {
      if (graph[t][v] != 0.0) {
        if (--in[v] == 0) {
          queue.offer(v);
        }
      }
    }
  }
  return ts;
}
