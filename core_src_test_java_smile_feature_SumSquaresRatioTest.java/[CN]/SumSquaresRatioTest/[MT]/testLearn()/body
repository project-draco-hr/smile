{
  System.out.println("USPS");
  try {
    DelimitedTextParser parser=new DelimitedTextParser();
    parser.setResponseIndex(new NominalAttribute("class"),0);
    AttributeDataset train=parser.parse("USPS Train",smile.data.parser.IOUtils.getTestDataFile("usps/zip.train"));
    AttributeDataset test=parser.parse("USPS Test",smile.data.parser.IOUtils.getTestDataFile("usps/zip.test"));
    double[][] x=train.toArray(new double[train.size()][]);
    int[] y=train.toArray(new int[train.size()]);
    double[][] testx=test.toArray(new double[test.size()][]);
    int[] testy=test.toArray(new int[test.size()]);
    SumSquaresRatio ssr=new SumSquaresRatio();
    double[] score=ssr.rank(x,y);
    int[] index=QuickSort.sort(score);
    int p=135;
    int n=x.length;
    double[][] xx=new double[n][p];
    for (int j=0; j < p; j++) {
      for (int i=0; i < n; i++) {
        xx[i][j]=x[i][index[255 - j]];
      }
    }
    int testn=testx.length;
    double[][] testxx=new double[testn][p];
    for (int j=0; j < p; j++) {
      for (int i=0; i < testn; i++) {
        testxx[i][j]=testx[i][index[255 - j]];
      }
    }
    LDA lda=new LDA(xx,y);
    int[] prediction=new int[testn];
    for (int i=0; i < testn; i++) {
      prediction[i]=lda.predict(testxx[i]);
    }
    double accuracy=new Accuracy().measure(testy,prediction);
    System.out.format("SSR %.2f%%\n",100 * accuracy);
  }
 catch (  Exception ex) {
    System.err.println(ex);
  }
}
