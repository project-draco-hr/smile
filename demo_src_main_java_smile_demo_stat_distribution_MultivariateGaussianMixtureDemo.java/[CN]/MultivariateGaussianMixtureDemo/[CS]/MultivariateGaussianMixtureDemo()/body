{
  super(new GridLayout(1,1));
  double[] mu1={1.0,1.0};
  double[][] sigma1={{1.0,0.0},{0.0,1.0}};
  double[] mu2={-2.0,-2.0};
  double[][] sigma2={{1.0,0.3},{0.3,1.0}};
  double[] mu3={4.0,2.0};
  double[][] sigma3={{1.0,0.8},{0.8,1.0}};
  double[] mu4={3.0,5.0};
  double[][] sigma4={{1.0,0.5},{0.5,1.0}};
  double[][] data=new double[3000][];
  MultivariateGaussianDistribution g1=new MultivariateGaussianDistribution(mu1,sigma1);
  double[][] data1=new double[500][];
  for (int i=0; i < data1.length; i++) {
    data[i]=g1.rand();
    data1[i]=data[i];
  }
  MultivariateGaussianDistribution g2=new MultivariateGaussianDistribution(mu2,sigma2);
  double[][] data2=new double[1000][];
  for (int i=0; i < data2.length; i++) {
    data[500 + i]=g2.rand();
    data2[i]=data[500 + i];
  }
  MultivariateGaussianDistribution g3=new MultivariateGaussianDistribution(mu3,sigma3);
  double[][] data3=new double[1000][];
  for (int i=0; i < data3.length; i++) {
    data[1500 + i]=g3.rand();
    data3[i]=data[1500 + i];
  }
  MultivariateGaussianDistribution g4=new MultivariateGaussianDistribution(mu4,sigma4);
  double[][] data4=new double[500][];
  for (int i=0; i < data4.length; i++) {
    data[2500 + i]=g4.rand();
    data4[i]=data[2500 + i];
  }
  MultivariateGaussianMixture mixture=new MultivariateGaussianMixture(data,4);
  int n=40;
  int m=40;
  double[][][] z=new double[m][n][3];
  for (int i=0; i < m; i++) {
    for (int j=0; j < n; j++) {
      z[i][j][0]=10.0 * (i - 12) / m;
      z[i][j][1]=10.0 * (j - 12) / n;
      double[] point={z[i][j][0],z[i][j][1]};
      z[i][j][2]=mixture.p(point);
    }
  }
  PlotCanvas canvas=Surface.plot(z);
  canvas.setTitle("Gaussian Mixture");
  add(canvas);
}
