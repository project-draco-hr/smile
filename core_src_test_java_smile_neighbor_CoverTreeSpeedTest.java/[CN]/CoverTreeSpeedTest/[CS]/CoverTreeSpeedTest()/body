{
  long start=System.currentTimeMillis();
  DelimitedTextParser parser=new DelimitedTextParser();
  parser.setResponseIndex(new NominalAttribute("class"),0);
  try {
    AttributeDataset train=parser.parse("USPS Train",smile.data.parser.IOUtils.getDataFile("usps/zip.train"));
    AttributeDataset test=parser.parse("USPS Test",smile.data.parser.IOUtils.getDataFile("usps/zip.test"));
    x=train.toArray(new double[train.size()][]);
    testx=test.toArray(new double[test.size()][]);
  }
 catch (  Exception ex) {
    System.err.println(ex);
  }
  double time=(System.currentTimeMillis() - start) / 1000.0;
  System.out.format("Loading data: %.2fs\n",time);
  start=System.currentTimeMillis();
  coverTree=new CoverTree<double[]>(x,new EuclideanDistance());
  time=(System.currentTimeMillis() - start) / 1000.0;
  System.out.format("Building cover tree: %.2fs\n",time);
}
