{
  try {
    k=Integer.parseInt(kField.getText().trim());
    if (k < 1) {
      JOptionPane.showMessageDialog(this,"Invalid K: " + k,"Error",JOptionPane.ERROR_MESSAGE);
      return null;
    }
  }
 catch (  Exception ex) {
    JOptionPane.showMessageDialog(this,"Invalid K: " + kField.getText(),"Error",JOptionPane.ERROR_MESSAGE);
    return null;
  }
  double[][] data=dataset[datasetIndex].toArray(new double[dataset[datasetIndex].size()][]);
  int[] label=dataset[datasetIndex].toArray(new int[dataset[datasetIndex].size()]);
  KNN<double[]> knn=KNN.learn(data,label,k);
  for (int i=0; i < label.length; i++) {
    label[i]=knn.predict(data[i]);
  }
  double trainError=error(label,label);
  System.out.format("training error = %.2f%%\n",100 * trainError);
  double[][] z=new double[y.length][x.length];
  for (int i=0; i < y.length; i++) {
    for (int j=0; j < x.length; j++) {
      double[] p={x[j],y[i]};
      z[i][j]=knn.predict(p);
    }
  }
  return z;
}
