{
  if (A.length != A[0].length) {
    throw new IllegalArgumentException(String.format("Matrix is not square: %d x %d",A.length,A[0].length));
  }
  int n=A.length;
  double[] d=new double[n];
  double[] e=new double[n];
  if (symmetric) {
    double[][] V=A;
    if (onlyValues) {
      tred(V,d,e);
      tql(d,e,n);
      return new EigenValueDecomposition(null,d);
    }
 else {
      tred2(V,d,e);
      tql2(V,d,e,n);
      return new EigenValueDecomposition(V,d);
    }
  }
 else {
    double[] scale=balance(A);
    int[] perm=elmhes(A);
    if (onlyValues) {
      hqr(A,d,e);
      sort(d,e);
      return new EigenValueDecomposition(null,d,e);
    }
 else {
      double[][] V=new double[n][n];
      for (int i=0; i < n; i++) {
        V[i][i]=1.0;
      }
      eltran(A,V,perm);
      hqr2(A,V,d,e);
      balbak(V,scale);
      sort(d,e,V);
      return new EigenValueDecomposition(V,d,e);
    }
  }
}
