{
  System.out.println("glass");
  LibsvmParser parser=new LibsvmParser();
  try {
    SparseDataset train=parser.parse("Glass",smile.data.parser.IOUtils.getTestDataFile("libsvm/glass.txt"));
    double[][] x=train.toArray();
    int[] y=train.toArray(new int[train.size()]);
    assertEquals(214,train.size());
    assertEquals(9,x[0].length);
    assertEquals(0,y[0]);
    assertEquals(-0.134323,x[0][0],1E-7);
    assertEquals(-0.124812,x[0][1],1E-7);
    assertEquals(1,x[0][2],1E-7);
    assertEquals(-0.495327,x[0][3],1E-7);
    assertEquals(-0.296429,x[0][4],1E-7);
    assertEquals(-0.980676,x[0][5],1E-7);
    assertEquals(-0.3829,x[0][6],1E-7);
    assertEquals(-1,x[0][7],1E-7);
    assertEquals(-1,x[0][8],1E-7);
    assertEquals(5,y[213]);
    assertEquals(-0.476734,x[213][0],1E-7);
    assertEquals(0.0526316,x[213][1],1E-7);
    assertEquals(-1,x[213][2],1E-7);
    assertEquals(0.115265,x[213][3],1E-7);
    assertEquals(0.267857,x[213][4],1E-7);
    assertEquals(-1,x[213][5],1E-7);
    assertEquals(-0.407063,x[213][6],1E-7);
    assertEquals(0.0603174,x[213][7],1E-7);
    assertEquals(-1,x[213][8],1E-7);
  }
 catch (  Exception ex) {
    System.err.println(ex);
  }
}
