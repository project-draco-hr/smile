{
  double gapl, gap;
  int mid=idamax(step + 1,bnd,0,1);
  for (int i=((step + 1) + (step - 1)) / 2; i >= mid + 1; i-=1) {
    if (Math.abs(ritz[i - 1] - ritz[i]) < eps34 * Math.abs(ritz[i])) {
      if (bnd[i] > tol && bnd[i - 1] > tol) {
        bnd[i - 1]=Math.sqrt(bnd[i] * bnd[i] + bnd[i - 1] * bnd[i - 1]);
        bnd[i]=0.0;
      }
    }
  }
  for (int i=((step + 1) - (step - 1)) / 2; i <= mid - 1; i+=1) {
    if (Math.abs(ritz[i + 1] - ritz[i]) < eps34 * Math.abs(ritz[i])) {
      if (bnd[i] > tol && bnd[i + 1] > tol) {
        bnd[i + 1]=Math.sqrt(bnd[i] * bnd[i] + bnd[i + 1] * bnd[i + 1]);
        bnd[i]=0.0;
      }
    }
  }
  int neig=0;
  gapl=ritz[step] - ritz[0];
  for (int i=0; i <= step; i++) {
    gap=gapl;
    if (i < step) {
      gapl=ritz[i + 1] - ritz[i];
    }
    gap=Math.min(gap,gapl);
    if (gap > bnd[i]) {
      bnd[i]=bnd[i] * (bnd[i] / gap);
    }
    if (bnd[i] <= 16.0 * Math.EPSILON * Math.abs(ritz[i])) {
      neig++;
      if (!enough[0]) {
        enough[0]=-Math.EPSILON < ritz[i] && ritz[i] < Math.EPSILON;
      }
    }
  }
  logger.info("Lancozs method found {} converged eigenvalues of the {}-by-{} matrix",neig,step + 1,step + 1);
  if (neig != 0) {
    for (int i=0; i <= step; i++) {
      if (bnd[i] <= 16.0 * Math.EPSILON * Math.abs(ritz[i])) {
        logger.info("ritz[{}] = {}",i,ritz[i]);
      }
    }
  }
  return neig;
}
