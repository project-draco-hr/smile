{
  BufferedReader reader=new BufferedReader(new InputStreamReader(stream));
  String line=reader.readLine();
  if (line == null) {
    throw new IOException("Empty data source.");
  }
  if (!line.equals("#1.2")) {
    throw new IOException("Invalid version.");
  }
  line=reader.readLine();
  if (line == null) {
    throw new IOException("Premature end of file.");
  }
  String[] tokens=line.split("\t",-1);
  if (tokens.length != 2) {
    throw new IOException("Invalid data size inforamation.");
  }
  int n=Integer.valueOf(tokens[0]);
  int p=Integer.valueOf(tokens[1]);
  if (n <= 0 || p <= 0) {
    throw new IOException(String.format("Invalid data size %d x %d.",n,p));
  }
  Attribute[] attributes=new Attribute[p];
  line=reader.readLine();
  if (line == null) {
    throw new IOException("Premature end of file.");
  }
  tokens=line.split("\t",-1);
  if (tokens.length != p + 2) {
    throw new IOException("Invalid title header.");
  }
  for (int i=0; i < p; i++) {
    attributes[i]=new NumericAttribute(tokens[i + 2]);
  }
  AttributeDataset data=new AttributeDataset(name,attributes);
  for (int i=0; i < n; i++) {
    line=reader.readLine();
    if (line == null) {
      throw new IOException("Premature end of file.");
    }
    tokens=line.split("\t",-1);
    if (tokens.length != p + 2) {
      throw new IOException(String.format("Invalid number of elements of line %d: %d",i + 4,tokens.length));
    }
    double[] x=new double[p];
    for (int j=0; j < p; j++) {
      if (tokens[j + 2].isEmpty()) {
        x[j]=Double.NaN;
      }
 else {
        x[j]=Double.valueOf(tokens[j + 2]);
      }
    }
    Datum<double[]> datum=new Datum<>(x);
    datum.name=tokens[0];
    datum.description=tokens[1];
    data.add(datum);
  }
  reader.close();
  return data;
}
