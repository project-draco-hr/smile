{
  Attribute[] attributes=data.attributes();
  int n=attributes.length;
  if (hasRowNames) {
    n=n + 1;
  }
  if (responseIndex >= 0) {
    n=n + 1;
  }
  String line=null;
  while ((line=reader.readLine()) != null) {
    if (line.isEmpty()) {
      continue;
    }
    if (line.startsWith(comment)) {
      continue;
    }
    String[] s=line.split(delimiter,0);
    if (s.length != n) {
      throw new ParseException(String.format("%d columns, expected %d",s.length,n),s.length);
    }
    String rowName=hasRowNames ? s[0] : null;
    double[] x=new double[attributes.length];
    double y=Double.NaN;
    for (int i=hasRowNames ? 1 : 0, k=0; i < s.length; i++) {
      if (i == responseIndex) {
        y=response.valueOf(s[i]);
      }
 else       if (missing != null && missing.equalsIgnoreCase(s[i])) {
        x[k++]=Double.NaN;
      }
 else {
        x[k]=attributes[k].valueOf(s[i]);
        k++;
      }
    }
    Datum<double[]> datum=new Datum<double[]>(x,y);
    datum.name=rowName;
    data.add(datum);
  }
  reader.close();
}
