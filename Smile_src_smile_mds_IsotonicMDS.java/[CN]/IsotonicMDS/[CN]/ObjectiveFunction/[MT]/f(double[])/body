{
  dist(x);
  yc[0]=0.0;
  double tmp=0.0;
  for (int i=0; i < n; i++) {
    tmp+=y[i];
    yc[i + 1]=tmp;
  }
  int ip=0;
  int known=0;
  do {
    double slope=1.0e+200;
    for (int i=known + 1; i <= n; i++) {
      tmp=(yc[i] - yc[known]) / (i - known);
      if (tmp < slope) {
        slope=tmp;
        ip=i;
      }
    }
    for (int i=known; i < ip; i++) {
      yf[i]=(yc[ip] - yc[known]) / (ip - known);
    }
  }
 while ((known=ip) < n);
  double sstar=0.0;
  double tstar=0.0;
  for (int i=0; i < n; i++) {
    tmp=y[i] - yf[i];
    sstar+=tmp * tmp;
    tstar+=y[i] * y[i];
  }
  double ssq=Math.sqrt(sstar / tstar);
  return ssq;
}
