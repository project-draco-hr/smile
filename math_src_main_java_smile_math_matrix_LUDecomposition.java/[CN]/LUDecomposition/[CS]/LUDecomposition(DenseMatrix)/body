{
  int m=A.nrows();
  int n=A.ncols();
  LU=A;
  piv=new int[m];
  for (int i=0; i < m; i++) {
    piv[i]=i;
  }
  pivsign=1;
  double[] LUcolj=new double[m];
  for (int j=0; j < n; j++) {
    for (int i=0; i < m; i++) {
      LUcolj[i]=LU.get(i,j);
    }
    for (int i=0; i < m; i++) {
      int kmax=Math.min(i,j);
      double s=0.0;
      for (int k=0; k < kmax; k++) {
        s+=LU.get(i,k) * LUcolj[k];
      }
      LUcolj[i]-=s;
      LU.set(i,j,LUcolj[i]);
    }
    int p=j;
    for (int i=j + 1; i < m; i++) {
      if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {
        p=i;
      }
    }
    if (p != j) {
      for (int k=0; k < n; k++) {
        double t=LU.get(p,k);
        LU.set(p,k,LU.get(j,k));
        LU.set(j,k,t);
      }
      int k=piv[p];
      piv[p]=piv[j];
      piv[j]=k;
      pivsign=-pivsign;
    }
    if (j < m & LU.get(j,j) != 0.0) {
      for (int i=j + 1; i < m; i++) {
        LU.div(i,j,LU.get(j,j));
      }
    }
  }
}
