{
  System.out.println("MultivariateGaussianDistribution");
  MultivariateGaussianDistribution instance=new MultivariateGaussianDistribution(mu,sigma[0]);
  double[][] data=new double[1000][];
  for (int i=0; i < data.length; i++) {
    data[i]=instance.rand();
  }
  MultivariateGaussianDistribution est=new MultivariateGaussianDistribution(data,true);
  for (int i=0; i < mu.length; i++) {
    assertEquals(mu[i],est.mean()[i],1E-1);
  }
  for (int i=0; i < mu.length; i++) {
    assertEquals(sigma[0][i],est.cov()[i][i],1E-1);
    for (int j=0; j < mu.length; j++) {
      if (i != j) {
        assertEquals(0,est.cov()[i][j],1E-10);
      }
    }
  }
  instance=new MultivariateGaussianDistribution(mu,sigma);
  data=new double[1000][];
  for (int i=0; i < data.length; i++) {
    data[i]=instance.rand();
  }
  est=new MultivariateGaussianDistribution(data);
  for (int i=0; i < mu.length; i++) {
    assertEquals(mu[i],est.mean()[i],1E-1);
  }
  for (int i=0; i < mu.length; i++) {
    for (int j=0; j < mu.length; j++) {
      assertEquals(sigma[i][j],est.cov()[i][j],1E-1);
    }
  }
  est=new MultivariateGaussianDistribution(data,true);
  for (int i=0; i < mu.length; i++) {
    assertEquals(mu[i],est.mean()[i],1E-1);
  }
  for (int i=0; i < mu.length; i++) {
    for (int j=0; j < mu.length; j++) {
      if (i == j) {
        assertEquals(sigma[i][j],est.cov()[i][j],1E-1);
      }
 else {
        assertEquals(0.0,est.cov()[i][j],1E-10);
      }
    }
  }
}
