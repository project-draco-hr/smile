{
  for (int count=1; smo(null,null,epsgr); count++) {
    if (count % 1000 == 0) {
    }
  }
  Iterator<SupportVector> iter=sv.iterator();
  while (iter.hasNext()) {
    SupportVector v=iter.next();
    if (v == null) {
      iter.remove();
    }
 else     if (v.alpha == 0) {
      if ((v.g >= gmax && 0 >= v.cmax) || (v.g <= gmin && 0 <= v.cmin)) {
        iter.remove();
      }
    }
  }
  cleanup();
  if (kernel instanceof LinearKernel) {
    w=new double[p];
    for (    SupportVector v : sv) {
      if (v.x instanceof double[]) {
        double[] x=(double[])v.x;
        for (int i=0; i < w.length; i++) {
          w[i]+=v.alpha * x[i];
        }
      }
 else       if (v.x instanceof int[]) {
        int[] x=(int[])v.x;
        for (int i=0; i < x.length; i++) {
          w[x[i]]+=v.alpha;
        }
      }
 else       if (v.x instanceof SparseArray) {
        for (        SparseArray.Entry e : (SparseArray)v.x) {
          w[e.i]+=v.alpha * e.x;
        }
      }
    }
  }
}
