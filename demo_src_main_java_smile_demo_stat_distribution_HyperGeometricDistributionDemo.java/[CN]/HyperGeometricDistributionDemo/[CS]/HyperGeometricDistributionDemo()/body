{
  super(new BorderLayout());
  Hashtable<Integer,JLabel> labelTable=new Hashtable<>();
  labelTable.put(1,new JLabel(String.valueOf(1)));
  for (int i=20; i <= 100; i+=20) {
    labelTable.put(new Integer(i),new JLabel(String.valueOf(i)));
  }
  mSlider=new JSlider(1,100,m);
  mSlider.addChangeListener(this);
  mSlider.setLabelTable(labelTable);
  mSlider.setMajorTickSpacing(20);
  mSlider.setMinorTickSpacing(5);
  mSlider.setPaintTicks(true);
  mSlider.setPaintLabels(true);
  nSlider=new JSlider(0,100,n);
  nSlider.addChangeListener(this);
  nSlider.setLabelTable(labelTable);
  nSlider.setMajorTickSpacing(20);
  nSlider.setMinorTickSpacing(5);
  nSlider.setPaintTicks(true);
  nSlider.setPaintLabels(true);
  optionPane=new JPanel(new FlowLayout(FlowLayout.LEFT));
  optionPane.setBorder(BorderFactory.createRaisedBevelBorder());
  optionPane.add(new JLabel("m:"));
  optionPane.add(mSlider);
  optionPane.add(new JLabel("n:"));
  optionPane.add(nSlider);
  add(optionPane,BorderLayout.NORTH);
  canvas=new JPanel(new GridLayout(1,3));
  add(canvas,BorderLayout.CENTER);
  HyperGeometricDistribution dist=new HyperGeometricDistribution(N,m,n);
  double[][] p=new double[50][2];
  double[][] q=new double[50][2];
  for (int i=0; i < p.length; i++) {
    p[i][0]=i;
    p[i][1]=dist.p(p[i][0]);
    q[i][0]=i;
    q[i][1]=dist.cdf(p[i][0]);
  }
  double[] lowerBound={0.0,0.0};
  double[] upperBound={50.0,1.0};
  pdf=new PlotCanvas(lowerBound,upperBound);
  pdf.add(new BarPlot(p));
  pdf.setTitle("PDF");
  canvas.add(pdf);
  cdf=new PlotCanvas(lowerBound,upperBound);
  cdf.staircase(q,Color.BLACK);
  cdf.setTitle("CDF");
  canvas.add(cdf);
  int[] data=new int[500];
  for (int i=0; i < data.length; i++) {
    data[i]=(int)dist.rand();
  }
  histogram=Histogram.plot(data,10);
  histogram.setTitle("Histogram");
  canvas.add(histogram);
}
