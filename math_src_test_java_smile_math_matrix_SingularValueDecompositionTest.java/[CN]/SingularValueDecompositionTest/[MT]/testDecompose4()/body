{
  System.out.println("decompose m = n+2");
  double[][] A={{1.19720880,-1.8391378,0.3019585,-1.1165701,-1.7210814},{0.06605075,1.0315583,0.8294362,-0.3646043,-1.6038017},{-1.02637715,1.0747931,-0.8089055,-0.4726863,-0.2064826},{-1.45817729,-0.8942353,0.3459245,1.5068363,-2.0180708},{-0.07318103,-0.2783787,1.2237598,0.1995332,0.2545336},{0.88248425,-0.9360321,0.1393172,0.1393281,-0.3277873},{0.12641406,-0.8710055,-0.2712301,0.2296515,1.1781535}};
  double[] s={3.6392869,3.0965326,2.4131673,1.6285557,0.7495616};
  double[][] U={{-0.68672751,-0.47077690,-0.27062524,0.30518577,0.35585700},{-0.28422169,0.33969351,-0.56700359,-0.38788214,-0.15789372},{0.18880503,0.39049353,-0.26448028,0.50872376,0.42411327},{-0.56957699,0.56761727,0.58111879,0.11662686,-0.01347444},{-0.06682433,-0.04559753,0.15586923,-0.68802278,0.60990585},{-0.23677832,-0.29935481,0.09428368,-0.03224480,-0.50781217},{0.16440378,-0.31082218,0.40550635,0.09794049,0.19627380}};
  double[][] V={{-0.10646320,-0.668422750,-0.33744231,-0.1953744,-0.6243702},{0.48885825,0.546411345,-0.57018018,-0.2348795,-0.2866678},{-0.26164973,0.002221196,-0.01788181,-0.9049532,0.3350739},{-0.02353895,0.306904408,0.68247803,-0.2353931,-0.6197333},{0.82502638,-0.400562630,0.30810911,-0.1797507,0.1778750}};
  SingularValueDecomposition result=SingularValueDecomposition.decompose(A);
  assertTrue(Math.equals(s,result.getSingularValues(),1E-7));
  assertEquals(U.length,result.getU().length);
  assertEquals(U[0].length,result.getU()[0].length);
  for (int i=0; i < U.length; i++) {
    for (int j=0; j < U[i].length; j++) {
      assertEquals(Math.abs(U[i][j]),Math.abs(result.getU()[i][j]),1E-7);
    }
  }
  assertEquals(V.length,result.getV().length);
  assertEquals(V[0].length,result.getV()[0].length);
  for (int i=0; i < V.length; i++) {
    for (int j=0; j < V[i].length; j++) {
      assertEquals(Math.abs(V[i][j]),Math.abs(result.getV()[i][j]),1E-7);
    }
  }
}
