{
  if (x.isEmpty())   throw new IllegalArgumentException("List x is empty.");
  if (y.isEmpty())   throw new IllegalArgumentException("List y is empty.");
  Iterator<SparseArray.Entry> iterX=x.iterator();
  Iterator<SparseArray.Entry> iterY=y.iterator();
  SparseArray.Entry a=iterX.hasNext() ? iterX.next() : null;
  SparseArray.Entry b=iterY.hasNext() ? iterY.next() : null;
  double dist=0.0;
  if (weight == null) {
    while (a != null && b != null) {
      if (a.i < b.i) {
        double d=a.x;
        dist+=d * d;
        a=iterX.hasNext() ? iterX.next() : null;
      }
 else       if (a.i > b.i) {
        double d=b.x;
        dist+=d * d;
        b=iterY.hasNext() ? iterY.next() : null;
      }
 else {
        double d=a.x - b.x;
        dist+=d * d;
        a=iterX.hasNext() ? iterX.next() : null;
        b=iterY.hasNext() ? iterY.next() : null;
      }
    }
    while (a != null) {
      double d=a.x;
      dist+=d * d;
      a=iterX.hasNext() ? iterX.next() : null;
    }
    while (b != null) {
      double d=b.x;
      dist+=d * d;
      b=iterY.hasNext() ? iterY.next() : null;
    }
  }
 else {
    while (a != null && b != null) {
      if (a.i < b.i) {
        double d=a.x;
        dist+=weight[a.i] * d * d;
        a=iterX.hasNext() ? iterX.next() : null;
      }
 else       if (a.i > b.i) {
        double d=b.x;
        dist+=weight[b.i] * d * d;
        b=iterY.hasNext() ? iterY.next() : null;
      }
 else {
        double d=a.x - b.x;
        dist+=weight[a.i] * d * d;
        a=iterX.hasNext() ? iterX.next() : null;
        b=iterY.hasNext() ? iterY.next() : null;
      }
    }
    while (a != null) {
      double d=a.x;
      dist+=weight[a.i] * d * d;
      a=iterX.hasNext() ? iterX.next() : null;
    }
    while (b != null) {
      double d=b.x;
      dist+=weight[b.i] * d * d;
      b=iterY.hasNext() ? iterY.next() : null;
    }
  }
  return Math.sqrt(dist);
}
