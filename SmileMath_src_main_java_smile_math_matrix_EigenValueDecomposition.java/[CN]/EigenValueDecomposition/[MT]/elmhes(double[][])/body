{
  int n=A.length;
  int[] perm=new int[n];
  for (int m=1; m < n - 1; m++) {
    double x=0.0;
    int i=m;
    for (int j=m; j < n; j++) {
      if (Math.abs(A[j][m - 1]) > Math.abs(x)) {
        x=A[j][m - 1];
        i=j;
      }
    }
    perm[m]=i;
    if (i != m) {
      for (int j=m - 1; j < n; j++) {
        double swap=A[i][j];
        A[i][j]=A[m][j];
        A[m][j]=swap;
      }
      for (int j=0; j < n; j++) {
        double swap=A[j][i];
        A[j][i]=A[j][m];
        A[j][m]=swap;
      }
    }
    if (x != 0.0) {
      for (i=m + 1; i < n; i++) {
        double y=A[i][m - 1];
        if (y != 0.0) {
          y/=x;
          A[i][m - 1]=y;
          for (int j=m; j < n; j++) {
            A[i][j]-=y * A[m][j];
          }
          for (int j=0; j < n; j++) {
            A[j][m]+=y * A[j][i];
          }
        }
      }
    }
  }
  return perm;
}
