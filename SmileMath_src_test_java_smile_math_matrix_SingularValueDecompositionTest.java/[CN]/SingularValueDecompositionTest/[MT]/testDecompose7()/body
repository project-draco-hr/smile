{
  System.out.println("decompose m = n-2");
  double[][] A={{1.19720880,-1.8391378,0.3019585,-1.1165701,-1.7210814,0.4918882,-0.04247433},{0.06605075,1.0315583,0.8294362,-0.3646043,-1.6038017,-0.9188110,-0.63760340},{-1.02637715,1.0747931,-0.8089055,-0.4726863,-0.2064826,-0.3325532,0.17966051},{-1.45817729,-0.8942353,0.3459245,1.5068363,-2.0180708,-0.3696350,-1.19575563},{-0.07318103,-0.2783787,1.2237598,0.1995332,0.2545336,-0.1392502,-1.88207227}};
  double[] s={3.8105658,3.0883849,2.2956507,2.0984771,0.9019027,0.0,0.0};
  double[][] U={{0.4022505,-0.8371341,0.218900330,-0.01150020,0.29891712},{0.3628648,0.1788073,0.520476180,0.66921454,-0.34294833},{-0.1204081,0.3526074,0.512685919,-0.03159520,0.77286790},{0.7654028,0.3523577,-0.005786511,-0.53518467,-0.05955197},{0.3258590,0.1369180,-0.646766462,0.51439164,0.43836489}};
  double[][] V={{-0.1340510,-0.6074832,-0.07579249,0.38390363,-0.4471462},{-0.3332981,0.5665840,0.37922383,0.48268873,-0.1570301},{0.3105522,-0.0324612,-0.30945577,0.48678825,-0.3365301},{0.1820803,0.4083420,-0.35471238,-0.43842294,-0.6389961},{-0.7114696,0.1311251,-0.64046888,0.07815179,0.1194533},{-0.1112159,-0.2728406,-0.19551704,-0.23056606,0.1841538},{-0.4720051,-0.2247534,0.42477493,-0.36219292,-0.4534882}};
  SingularValueDecomposition result=SingularValueDecomposition.decompose(A);
  assertTrue(Math.equals(s,result.getSingularValues(),1E-7));
  assertEquals(U.length,result.getU().length);
  for (int i=0; i < U.length; i++) {
    for (int j=0; j < U[i].length; j++) {
      assertEquals(Math.abs(U[i][j]),Math.abs(result.getU()[i][j]),1E-7);
    }
  }
  assertEquals(V.length,result.getV().length);
  for (int i=0; i < V.length; i++) {
    for (int j=0; j < V[i].length; j++) {
      assertEquals(Math.abs(V[i][j]),Math.abs(result.getV()[i][j]),1E-7);
    }
  }
}
