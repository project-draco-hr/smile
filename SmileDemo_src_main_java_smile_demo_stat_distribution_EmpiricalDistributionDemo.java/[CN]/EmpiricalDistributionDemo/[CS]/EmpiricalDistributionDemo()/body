{
  super(new GridLayout(2,2));
  double[] prob=new double[10];
  for (int i=0; i < prob.length; i++)   prob[i]=1.0 / prob.length;
  EmpiricalDistribution emp=new EmpiricalDistribution(prob);
  double[] data=new double[500];
  for (int i=0; i < 500; i++) {
    data[i]=emp.rand();
  }
  PlotCanvas canvas=Histogram.plot(data,10);
  canvas.setTitle("Equal Probabilities");
  add(canvas);
  double[][] p=new double[10][2];
  for (int i=0; i < p.length; i++) {
    p[i][0]=i;
    p[i][1]=emp.p(p[i][0]);
  }
  canvas.line(p,Color.RED);
  p=new double[11][2];
  for (int i=0; i < p.length; i++) {
    p[i][0]=i;
    p[i][1]=emp.cdf(p[i][0]);
  }
  canvas=StaircasePlot.plot(p);
  canvas.setTitle("CDF");
  add(canvas);
  prob=new double[10];
  for (int i=0; i < prob.length; i++)   prob[i]=1.0 / prob.length;
  prob[1]=0.2;
  prob[3]=0.05;
  prob[4]=0.05;
  prob[6]=0.08;
  prob[7]=0.12;
  emp=new EmpiricalDistribution(prob);
  for (int i=0; i < 500; i++) {
    data[i]=emp.rand();
  }
  canvas=Histogram.plot(data,10);
  canvas.setTitle("Non-Equal Probabilities");
  add(canvas);
  p=new double[10][2];
  for (int i=0; i < p.length; i++) {
    p[i][0]=i;
    p[i][1]=emp.p(p[i][0]);
  }
  canvas.line(p,Color.RED);
  p=new double[11][2];
  for (int i=0; i < p.length; i++) {
    p[i][0]=i;
    p[i][1]=emp.cdf(p[i][0]);
  }
  canvas=StaircasePlot.plot(p);
  canvas.setTitle("CDF");
  add(canvas);
}
