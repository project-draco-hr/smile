{
  int m=A.nrows();
  int n=A.ncols();
  Rdiagonal=new double[n];
  QR=A;
  for (int k=0; k < n; k++) {
    double nrm=0.0;
    for (int i=k; i < m; i++) {
      nrm=Math.hypot(nrm,QR.get(i,k));
    }
    if (nrm != 0.0) {
      if (QR.get(k,k) < 0) {
        nrm=-nrm;
      }
      for (int i=k; i < m; i++) {
        QR.div(i,k,nrm);
      }
      QR.add(k,k,1.0);
      for (int j=k + 1; j < n; j++) {
        double s=0.0;
        for (int i=k; i < m; i++) {
          s+=QR.get(i,k) * QR.get(i,j);
        }
        s=-s / QR.get(k,k);
        for (int i=k; i < m; i++) {
          QR.add(i,j,s * QR.get(i,k));
        }
      }
    }
    Rdiagonal[k]=-nrm;
  }
  singular=false;
  for (int j=0; j < Rdiagonal.length; j++) {
    if (Rdiagonal[j] == 0) {
      singular=true;
      break;
    }
  }
}
