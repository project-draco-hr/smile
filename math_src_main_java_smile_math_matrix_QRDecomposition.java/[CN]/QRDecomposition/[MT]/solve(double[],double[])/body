{
  int m=QR.nrows();
  int n=QR.ncols();
  if (b.length != m) {
    throw new IllegalArgumentException(String.format("Row dimensions do not agree: A is %d x %d, but b is %d x 1",QR.nrows(),QR.ncols(),b.length));
  }
  if (x.length != n) {
    throw new IllegalArgumentException("A and x dimensions do not agree.");
  }
  if (!isFullColumnRank()) {
    throw new RuntimeException("Matrix is rank deficient.");
  }
  double[] y=b;
  if (b != x) {
    y=b.clone();
  }
  for (int k=0; k < n; k++) {
    double s=0.0;
    for (int i=k; i < m; i++) {
      s+=QR.get(i,k) * y[i];
    }
    s=-s / QR.get(k,k);
    for (int i=k; i < m; i++) {
      y[i]+=s * QR.get(i,k);
    }
  }
  for (int k=n - 1; k >= 0; k--) {
    x[k]=y[k] / Rdiagonal[k];
    for (int i=0; i < k; i++) {
      y[i]-=x[k] * QR.get(i,k);
    }
  }
}
