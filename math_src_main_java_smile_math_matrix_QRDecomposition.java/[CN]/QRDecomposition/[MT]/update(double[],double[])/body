{
  int m=QR.nrows();
  int n=QR.ncols();
  if (u.length != m || v.length != n) {
    throw new IllegalArgumentException("u.length = " + u.length + " v.length = "+ v.length);
  }
  int k;
  for (k=m - 1; k >= 0; k--) {
    if (u[k] != 0.0) {
      break;
    }
  }
  if (k < 0) {
    return;
  }
  for (int i=k - 1; i >= 0; i--) {
    rotate(i,u[i],-u[i + 1]);
    if (u[i] == 0.0) {
      u[i]=Math.abs(u[i + 1]);
    }
 else     if (Math.abs(u[i]) > Math.abs(u[i + 1])) {
      u[i]=Math.abs(u[i]) * Math.sqrt(1.0 + Math.sqr(u[i + 1] / u[i]));
    }
 else {
      u[i]=Math.abs(u[i + 1]) * Math.sqrt(1.0 + Math.sqr(u[i] / u[i + 1]));
    }
  }
  Rdiagonal[0]+=u[0] * v[0];
  for (int i=1; i < n; i++) {
    QR.set(0,i,QR.get(0,i) + u[0] * v[i]);
  }
  for (int i=0; i < k; i++) {
    rotate(i,Rdiagonal[i],-QR.get(i + 1,i));
  }
  for (int i=0; i < n; i++) {
    if (Rdiagonal[i] == 0.0) {
      singular=true;
    }
  }
}
