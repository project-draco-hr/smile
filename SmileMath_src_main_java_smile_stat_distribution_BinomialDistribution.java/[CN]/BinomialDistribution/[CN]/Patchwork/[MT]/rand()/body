{
  int Dk, X, Y;
  double U, V, W;
  for (; ; ) {
    if ((U=Math.random() * p6) < p2) {
      if ((V=U - p1) < 0.) {
        return (k2 + (int)(U / f2));
      }
      if ((W=V / dl) < f1) {
        return (k1 + (int)(V / f1));
      }
      Dk=(int)(dl * Math.random()) + 1;
      if (W <= f2 - Dk * (f2 - f2 / r2)) {
        return (k2 - Dk);
      }
      if ((V=f2 + f2 - W) < 1.) {
        Y=k2 + Dk;
        if (V <= f2 + Dk * (1. - f2) / (dl + 1.)) {
          return (Y);
        }
        if (V <= f(Y,n,l_pq,c_pm)) {
          return (Y);
        }
      }
      X=k2 - Dk;
    }
 else     if (U < p4) {
      if ((V=U - p3) < 0.) {
        return (k4 - (int)((U - p2) / f4));
      }
      if ((W=V / dr) < f5) {
        return (k5 - (int)(V / f5));
      }
      Dk=(int)(dr * Math.random()) + 1;
      if (W <= f4 - Dk * (f4 - f4 * r4)) {
        return (k4 + Dk);
      }
      if ((V=f4 + f4 - W) < 1.) {
        Y=k4 - Dk;
        if (V <= f4 + Dk * (1. - f4) / dr) {
          return (Y);
        }
        if (V <= f(Y,n,l_pq,c_pm)) {
          return (Y);
        }
      }
      X=k4 + Dk;
    }
 else {
      W=Math.random();
      if (U < p5) {
        Dk=(int)(1. - Math.log(W) / ll);
        if ((X=k1 - Dk) < 0) {
          continue;
        }
        W*=(U - p4) * ll;
        if (W <= f1 - Dk * (f1 - f1 / r1)) {
          return X;
        }
      }
 else {
        Dk=(int)(1. - Math.log(W) / lr);
        if ((X=k5 + Dk) > n) {
          continue;
        }
        W*=(U - p5) * lr;
        if (W <= f5 - Dk * (f5 - f5 * r5)) {
          return X;
        }
      }
    }
    if (Math.log(W) <= X * l_pq - Math.logFactorial(X) - Math.logFactorial(n - X) - c_pm) {
      return X;
    }
  }
}
