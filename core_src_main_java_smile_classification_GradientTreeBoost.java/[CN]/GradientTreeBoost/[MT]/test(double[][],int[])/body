{
  double[] accuracy=new double[ntrees];
  int n=x.length;
  int[] label=new int[n];
  Accuracy measure=new Accuracy();
  if (k == 2) {
    double[] prediction=new double[n];
    Arrays.fill(prediction,b);
    for (int i=0; i < ntrees; i++) {
      for (int j=0; j < n; j++) {
        prediction[j]+=shrinkage * trees[i].predict(x[j]);
        label[j]=prediction[j] > 0 ? 1 : 0;
      }
      accuracy[i]=measure.measure(y,label);
    }
  }
 else {
    double[][] prediction=new double[n][k];
    for (int i=0; i < ntrees; i++) {
      for (int j=0; j < n; j++) {
        for (int l=0; l < k; l++) {
          prediction[j][l]+=shrinkage * forest[l][i].predict(x[j]);
        }
        label[j]=Math.whichMax(prediction[j]);
      }
      accuracy[i]=measure.measure(y,label);
    }
  }
  return accuracy;
}
