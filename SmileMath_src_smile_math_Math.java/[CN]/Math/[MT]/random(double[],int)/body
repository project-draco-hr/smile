{
  double[] q=new double[prob.length];
  for (int i=0; i < prob.length; i++) {
    q[i]=prob[i] * prob.length;
  }
  int[] a=new int[prob.length];
  for (int i=0; i < prob.length; i++) {
    a[i]=i;
  }
  int[] HL=new int[prob.length];
  int head=0;
  int tail=prob.length - 1;
  for (int i=0; i < prob.length; i++) {
    if (q[i] >= 1.0) {
      HL[head++]=i;
    }
 else {
      HL[tail--]=i;
    }
  }
  while (head != 0 && tail != prob.length - 1) {
    int j=HL[tail + 1];
    int k=HL[head - 1];
    a[j]=k;
    q[k]+=q[j] - 1;
    tail++;
    if (q[k] < 1.0) {
      HL[tail--]=k;
      head--;
    }
  }
  int[] ans=new int[n];
  for (int i=0; i < n; i++) {
    double rU=random() * prob.length;
    int k=(int)(rU);
    rU-=k;
    if (rU < q[k]) {
      ans[i]=k;
    }
 else {
      ans[i]=a[k];
    }
  }
  return ans;
}
