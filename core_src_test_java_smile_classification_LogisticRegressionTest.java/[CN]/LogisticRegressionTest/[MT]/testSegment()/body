{
  System.out.println("Segment");
  ArffParser arffParser=new ArffParser();
  arffParser.setResponseIndex(19);
  try {
    AttributeDataset train=arffParser.parse(smile.data.parser.IOUtils.getDataFile("weka/segment-challenge.arff"));
    AttributeDataset test=arffParser.parse(smile.data.parser.IOUtils.getDataFile("weka/segment-test.arff"));
    double[][] x=train.toArray(new double[train.size()][]);
    int[] y=train.toArray(new int[train.size()]);
    double[][] testx=test.toArray(new double[test.size()][]);
    int[] testy=test.toArray(new int[test.size()]);
    LogisticRegression logit=new LogisticRegression(x,y,0.05,1E-3,1000);
    int error=0;
    for (int i=0; i < testx.length; i++) {
      if (logit.predict(testx[i]) != testy[i]) {
        error++;
      }
    }
    System.out.format("Segment error rate = %.2f%%\n",100.0 * error / testx.length);
    assertEquals(48,error);
  }
 catch (  Exception ex) {
    System.err.println(ex);
  }
}
