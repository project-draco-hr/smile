{
  System.out.println("solve");
  double[][] A={{0.9000,0.4000,0.0000},{0.4000,0.5000,0.3000},{0.0000,0.3000,0.8000}};
  double[] b={0.5,0.5,0.5};
  LUDecomposition lu=new LUDecomposition(A);
  double[] x=new double[b.length];
  lu.solve(b,x);
  double[] result=new double[3];
  Math.solve(new Matrix(A),b,result);
  assertEquals(result.length,x.length);
  for (int i=0; i < x.length; i++) {
    assertEquals(result[i],x[i],1E-7);
  }
  BandMatrix band=new BandMatrix(3,1,1);
  for (int i=0; i < A.length; i++) {
    for (int j=0; j < A[i].length; j++) {
      if (A[i][j] != 0.0) {
        band.set(i,j,A[i][j]);
      }
    }
  }
  result=new double[3];
  Math.solve(band,b,result);
  assertEquals(result.length,x.length);
  for (int i=0; i < x.length; i++) {
    assertEquals(result[i],x[i],1E-7);
  }
  int[] rowIndex={0,1,0,1,2,1,2};
  int[] colIndex={0,2,5,7};
  double[] val={0.9,0.4,0.4,0.5,0.3,0.3,0.8};
  SparseMatrix sparse=new SparseMatrix(3,3,val,rowIndex,colIndex);
  result=new double[3];
  Math.solve(sparse,b,result);
  assertEquals(result.length,x.length);
  for (int i=0; i < x.length; i++) {
    assertEquals(result[i],x[i],1E-7);
  }
}
