{
  super(new GridLayout(2,2));
  double[] data={23.0,23.0,22.0,22.0,21.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,24.0,22.0,22.0,16.0,16.0,16.0,23.0,23.0,15.0,21.0,21.0,21.0,21.0,24.0,24.0,21.0,21.0,24.0,24.0,24.0,24.0,1.0,1.0,23.0,23.0,22.0,22.0,14.0,24.0,24.0,23.0,23.0,18.0,18.0,23.0,23.0,24.0,24.0,22.0,22.0,17.0,17.0,17.0,21.0,21.0,15.0,14.0};
  ExponentialFamilyMixture mixture=new GaussianMixture(data);
  PlotCanvas canvas=Histogram.plot(data,24);
  canvas.setTitle("Gaussian Mixture with Singular Component");
  add(canvas);
  double width=(Math.max(data) - Math.min(data)) / 24;
  double[][] p=new double[50][2];
  for (int i=0; i < p.length; i++) {
    p[i][0]=i * 0.5;
    p[i][1]=mixture.p(p[i][0]) * width;
  }
  canvas.line(p,Color.RED);
  canvas=QQPlot.plot(data,mixture);
  canvas.setTitle("Q-Q Plot");
  add(canvas);
  data=new double[3000];
  GaussianDistribution g1=new GaussianDistribution(1.0,1.0);
  for (int i=0; i < 500; i++)   data[i]=g1.rand();
  GaussianDistribution g2=new GaussianDistribution(4.0,1.0);
  for (int i=500; i < 1000; i++)   data[i]=g2.rand();
  GaussianDistribution g3=new GaussianDistribution(8.0,1.0);
  for (int i=1000; i < 2000; i++)   data[i]=g3.rand();
  GaussianDistribution g4=new GaussianDistribution(-3.0,1.0);
  for (int i=2000; i < 2500; i++)   data[i]=g4.rand();
  GaussianDistribution g5=new GaussianDistribution(-6.0,1.0);
  for (int i=2500; i < 3000; i++)   data[i]=g5.rand();
  mixture=new GaussianMixture(data,5);
  canvas=Histogram.plot(data,50);
  canvas.setTitle("Gaussian Mixture of Five Components");
  add(canvas);
  width=(Math.max(data) - Math.min(data)) / 50;
  p=new double[220][2];
  for (int i=0; i < p.length; i++) {
    p[i][0]=-10 + i * 0.1;
    p[i][1]=mixture.p(p[i][0]) * width;
  }
  canvas.line(p,Color.RED);
  canvas=QQPlot.plot(data,mixture);
  canvas.setTitle("Q-Q Plot");
  add(canvas);
}
