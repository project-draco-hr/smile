{
  if (p <= 0) {
    throw new IllegalArgumentException("Invalid dimension: " + p);
  }
  if (sigma < 0) {
    throw new IllegalArgumentException("Invalid add-k smoothing parameter: " + sigma);
  }
  if (priori.length < 2) {
    throw new IllegalArgumentException("Invalid number of classes: " + priori.length);
  }
  double sum=0.0;
  for (  double pr : priori) {
    if (pr <= 0.0 || pr >= 1.0) {
      throw new IllegalArgumentException("Invalid priori probability: " + pr);
    }
    sum+=pr;
  }
  if (Math.abs(sum - 1.0) > 1E-10) {
    throw new IllegalArgumentException("The sum of priori probabilities is not one: " + sum);
  }
  this.model=model;
  this.k=priori.length;
  this.p=p;
  this.sigma=sigma;
  this.priori=priori;
  predefinedPriori=true;
  sum=0.0;
  for (int i=0; i < k; i++) {
    if (priori[i] <= 0.0 || priori[i] >= 1.0) {
      throw new IllegalArgumentException("Invalid priori probability: " + priori[i]);
    }
    sum+=priori[i];
  }
  if (Math.abs(1.0 - sum) > 1E-5) {
    throw new IllegalArgumentException("Priori probabilities don't sum to 1.");
  }
  n=0;
  nc=new int[k];
  nt=new int[k];
  ntc=new int[k][p];
  condprob=new double[k][p];
}
