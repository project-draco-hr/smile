{
  if (r <= 0.0) {
    throw new IllegalArgumentException("Invalid scaling parameter: " + r);
  }
  int k=centers.length;
  CLARANS<T> clarans=new CLARANS<>(x,distance,k,Math.min(100,(int)Math.round(0.01 * k * (x.length - k))));
  System.arraycopy(clarans.medoids(),0,centers,0,k);
  int n=x.length;
  int[] y=clarans.getClusterLabel();
  double[] sigma=new double[k];
  for (int i=0; i < n; i++) {
    sigma[y[i]]+=Math.sqr(distance.d(x[i],centers[y[i]]));
  }
  int[] ni=clarans.getClusterSize();
  GaussianRadialBasis[] rbf=new GaussianRadialBasis[k];
  for (int i=0; i < k; i++) {
    if (ni[i] >= 5 || sigma[i] == 0.0) {
      sigma[i]=Math.sqrt(sigma[i] / ni[i]);
    }
 else {
      sigma[i]=Double.POSITIVE_INFINITY;
      for (int j=0; j < k; j++) {
        if (i != j) {
          double d=distance.d(centers[i],centers[j]);
          if (d < sigma[i]) {
            sigma[i]=d;
          }
        }
      }
      sigma[i]/=2.0;
    }
    rbf[i]=new GaussianRadialBasis(r * sigma[i]);
  }
  return rbf;
}
