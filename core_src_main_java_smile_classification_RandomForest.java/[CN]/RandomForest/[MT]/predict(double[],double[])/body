{
  if (posteriori.length != k) {
    throw new IllegalArgumentException(String.format("Invalid posteriori vector size: %d, expected: %d",posteriori.length,k));
  }
  Arrays.fill(posteriori,0.0);
  double[] y=new double[k];
  double[] pos=new double[k];
  for (  Tree tree : trees) {
    y[tree.tree.predict(x,pos)]+=tree.weight;
    for (int i=0; i < k; i++) {
      posteriori[i]+=tree.weight * pos[i];
    }
  }
  Math.unitize1(posteriori);
  return Math.whichMax(y);
}
