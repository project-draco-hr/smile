{
  DelimitedTextParser parser=new DelimitedTextParser();
  parser.setResponseIndex(new NominalAttribute("class"),0);
  try {
    AttributeDataset train=parser.parse("USPS Train",smile.data.parser.IOUtils.getDataFile("usps/zip.train"));
    AttributeDataset test=parser.parse("USPS Test",smile.data.parser.IOUtils.getDataFile("usps/zip.test"));
    x=train.toArray(new double[train.size()][]);
    testx=test.toArray(new double[test.size()][]);
  }
 catch (  Exception ex) {
    System.err.println(ex);
  }
  naive=new LinearSearch<double[]>(x,new EuclideanDistance());
  lsh=new MPLSH<double[]>(256,100,3,4.0);
  for (  double[] xi : x) {
    lsh.put(xi,xi);
  }
  double[][] train=new double[500][];
  int[] index=Math.permutate(x.length);
  for (int i=0; i < train.length; i++) {
    train[i]=x[index[i]];
  }
  lsh.learn(naive,train,8.0);
}
