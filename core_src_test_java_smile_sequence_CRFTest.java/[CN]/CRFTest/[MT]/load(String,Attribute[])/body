{
  int p=0;
  int k=0;
  Dataset dataset=new Dataset();
  dataset.attributes=attributes;
  ArrayList<double[][]> x=new ArrayList<>();
  ArrayList<int[]> y=new ArrayList<>();
  ArrayList<double[]> seq=new ArrayList<>();
  ArrayList<Integer> label=new ArrayList<>();
  int id=1;
  try (BufferedReader input=smile.data.parser.IOUtils.getTestDataReader(resource)){
    String[] words=input.readLine().split(" ");
    int nseq=Integer.parseInt(words[0]);
    k=Integer.parseInt(words[1]);
    p=Integer.parseInt(words[2]);
    String line=null;
    while ((line=input.readLine()) != null) {
      words=line.split(" ");
      int seqid=Integer.parseInt(words[0]);
      int pos=Integer.parseInt(words[1]);
      int len=Integer.parseInt(words[2]);
      if (dataset.attributes == null) {
        dataset.attributes=new Attribute[len];
        for (int i=0; i < len; i++) {
          dataset.attributes[i]=new NominalAttribute("Attr" + (i + 1));
        }
      }
      double[] feature=new double[len];
      for (int i=0; i < len; i++) {
        try {
          feature[i]=dataset.attributes[i].valueOf(words[i + 3]);
        }
 catch (        ParseException ex) {
          System.err.println(ex);
        }
      }
      if (seqid == id) {
        seq.add(feature);
        label.add(Integer.valueOf(words[len + 3]));
      }
 else {
        id=seqid;
        double[][] xx=new double[seq.size()][];
        int[] yy=new int[seq.size()];
        for (int i=0; i < seq.size(); i++) {
          xx[i]=seq.get(i);
          yy[i]=label.get(i);
        }
        x.add(xx);
        y.add(yy);
        seq=new ArrayList<>();
        label=new ArrayList<>();
        seq.add(feature);
        label.add(Integer.valueOf(words[len + 3]));
      }
    }
    double[][] xx=new double[seq.size()][];
    int[] yy=new int[seq.size()];
    for (int i=0; i < seq.size(); i++) {
      xx[i]=seq.get(i);
      yy[i]=label.get(i);
    }
    x.add(xx);
    y.add(yy);
  }
 catch (  IOException ex) {
    System.err.println(ex);
  }
  dataset.p=p;
  dataset.k=k;
  dataset.x=new double[x.size()][][];
  dataset.y=new int[y.size()][];
  for (int i=0; i < dataset.x.length; i++) {
    dataset.x[i]=x.get(i);
    dataset.y[i]=y.get(i);
  }
  return dataset;
}
