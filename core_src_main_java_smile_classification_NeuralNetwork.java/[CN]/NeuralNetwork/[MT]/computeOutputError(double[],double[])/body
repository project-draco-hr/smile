{
  if (output.length != outputLayer.units) {
    throw new IllegalArgumentException(String.format("Invalid output vector size: %d, expected: %d",output.length,outputLayer.units));
  }
  double error=0.0;
  for (int i=0; i < outputLayer.units; i++) {
    double out=outputLayer.output[i];
    double g=output[i] - out;
    if (errorFunction == ErrorFunction.LEAST_MEAN_SQUARES && activationFunction == ActivationFunction.LOGISTIC_SIGMOID) {
      g*=out * (1.0 - out);
    }
    if (errorFunction == ErrorFunction.LEAST_MEAN_SQUARES) {
      error+=0.5 * g * g;
    }
 else     if (errorFunction == ErrorFunction.CROSS_ENTROPY) {
      if (activationFunction == ActivationFunction.SOFTMAX) {
        error-=output[i] * log(out);
      }
 else       if (activationFunction == ActivationFunction.LOGISTIC_SIGMOID) {
        error=-output[i] * log(out) - (1.0 - output[i]) * log(1.0 - out);
      }
    }
    gradient[i]=g;
  }
  return error;
}
