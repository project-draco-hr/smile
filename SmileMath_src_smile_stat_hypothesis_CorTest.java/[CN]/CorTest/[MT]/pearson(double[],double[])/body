{
  final double TINY=1.0e-20;
  int n=x.length;
  double syy=0.0, sxy=0.0, sxx=0.0, ay=0.0, ax=0.0;
  for (int j=0; j < n; j++) {
    ax+=x[j];
    ay+=y[j];
  }
  ax/=n;
  ay/=n;
  for (int j=0; j < n; j++) {
    double xt=x[j] - ax;
    double yt=y[j] - ay;
    sxx+=xt * xt;
    syy+=yt * yt;
    sxy+=xt * yt;
  }
  double r=sxy / (Math.sqrt(sxx * syy) + TINY);
  int df=n - 2;
  double t=r * Math.sqrt(df / ((1.0 - r + TINY) * (1.0 + r + TINY)));
  double prob=Beta.regularizedIncompleteBetaFunction(0.5 * df,0.5,df / (df + t * t));
  return new CorTest(r,df,t,prob);
}
